Import(["env", "conf_env"])

if env.get("LIBNATPMP_BUNDLED", False) :

################################################################################
# Module flags
################################################################################

	if env["SCONS_STAGE"] == "flags" :
		env["LIBNATPMP_FLAGS"] = {
				"CPPPATH": [Dir("src/libnatpmp")],
				"LIBPATH": [Dir(".")],
				"LIBS": ["Swiften_NATPMP"],
				"INTERNAL_CPPDEFINES": ["STATICLIB"],
			}
		#if env["PLATFORM"] == "win32" :
		#	env["LIBIDN_FLAGS"]["CPPPATH"] += [Dir("stubs/win32")]
		#	if env["MSVC_VERSION"][:3] == "9.0" :
		#		env["LIBIDN_FLAGS"]["CPPPATH"] += [Dir("stubs/win32/VC2008")]

################################################################################
# Build
################################################################################

	if env["SCONS_STAGE"] == "build" :
		myenv = env.Clone()
		myenv.Append(CPPPATH = ["src"])
		# Remove warn flags
		myenv.Replace(CCFLAGS = [flag for flag in env["CCFLAGS"] if flag not in ["-W", "-Wall"]])

		myenv.Append(CCFLAGS = ["-DNDEBUG", "-DSTATICLIB"])
		
		#if myenv["PLATFORM"] != "win32":
		#	myenv.Append(CCFLAGS = ["-DMINIUPNPC_SET_SOCKET_TIMEOUT"])
		
		if myenv["PLATFORM"] == "darwin":
			myenv.Append(CCFLAGS = ["-DMACOSX", "-D_DARWIN_C_SOURCE"])
		
		if myenv["PLATFORM"] == "win32":
			myenv.Append(CCFLAGS = ["-DWIN32"])

		src_files = [
				"src/libnatpmp/getgateway.c",
				"src/libnatpmp/natpmp.c",
				"src/libnatpmp/natpmpc.c",
			]	
		
		if myenv["PLATFORM"] == "win32":
			src_files += ["src/libnatpmp/wingettimeofday.c"]
		
		myenv.StaticLibrary("Swiften_NATPMP", src_files)
